upstream unicorn {
  # fail_timeout=0 means always retry when failed
  server unix:/tmp/unicorn.server.sock fail_timeout=0;
}

server {
  # make parameter with '_' to be allowed
  underscores_in_headers on;
  # decide which server to deal with the request
  listen 80 default_server;

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  root /home/ec2-user/goal/current/goal/public;

  if ($http_x_forwarded_proto = 'http') {
    return 301 https://$host$request_uri;
  }

  client_max_body_size 100m;
  error_page 404 /404.html;
  error_page 500 502 503 504 /500.html;
  try_files $uri/index.html $uri.html $uri @unicorn;

  location ~ ^/assets/ {
    expires 1y;
    add_header Cache-Control public;

    add_header ETag "";
  }

  location /elb/health {
    access_log off;
    return 200;
  }

  location @unicorn {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_pass http://unicorn;
  }
}
